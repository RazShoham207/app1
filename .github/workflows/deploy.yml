name: Deploy to AKS using Helm

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Enable debug logging
      run: |
        echo "##[debug]Enable debug logging"
        echo "##[debug]$(env)"

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Login to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: restaurantsacr2.azurecr.io
        username: ${{ secrets.AZURE_ACR_USERNAME }}
        password: ${{ secrets.AZURE_ACR_PASSWORD }}

    - name: Verify Azure Container Registry Login
      run: |
        az acr login --name restaurantsacr2

    - name: Build and push Docker image
      run: |
        docker buildx build --push --tag restaurantsacr2.azurecr.io/restaurants-app2:latest .

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Set up kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: 'latest'

    - name: Set up Azure CLI
      uses: azure/CLI@v1
      with:
        azcliversion: '2.30.0'
        inlineScript: |
          echo "Azure CLI setup complete"

    - name: Get AKS credentials
      run: |
        az aks get-credentials --resource-group Restaurants-rg2 --name restaurants-aks2

    - name: Verify Kubernetes context
      run: |
        kubectl config view
        kubectl config current-context || echo "No current context set"
        kubectl get nodes || echo "Unable to get nodes"

    - name: Set up Helm
      uses: azure/setup-helm@v1

    - name: Clean up existing ServiceAccount
      run: |
        kubectl delete serviceaccount restaurants-app2 --ignore-not-found

    - name: Deploy to AKS using Helm
      run: |
        RELEASE_NAME="restaurants-app2"
        CHART_PATH="./restaurants-charts"

        if helm ls --namespace default | grep -q $RELEASE_NAME; then
          echo "### Upgrading existing release"
          helm upgrade $RELEASE_NAME $CHART_PATH --set image.repository=restaurantsacr2.azurecr.io/restaurants-app2 --set image.tag=latest
        else
          echo "### Installing new release"
          helm install $RELEASE_NAME $CHART_PATH --set image.repository=restaurantsacr2.azurecr.io/restaurants-app2 --set image.tag=latest
        fi

    - name: Restart Deployment
      run: |
        kubectl patch deployment restaurants-app2 -n default -p \
          "{\"spec\":{\"template\":{\"metadata\":{\"annotations\":{\"kubectl.kubernetes.io/restartedAt\":\"$(date -u +'%Y-%m-%dT%H:%M:%SZ')\"}}}}}"
